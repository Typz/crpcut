cmake_minimum_required(VERSION 2.4)
if (COMMAND cmake_policy)
  cmake_policy(SET CMP0003 NEW)
endif(COMMAND cmake_policy)
PROJECT(crpcut)
INCLUDE(CheckFunctionExists)
INCLUDE(CheckLibraryExists)
AUX_SOURCE_DIRECTORY(src LIB_SRCS)

# check for clock_gettime()

CHECK_FUNCTION_EXISTS("clock_gettime()" HAVE_CLOCK_GETTIME)
IF(NOT HAVE_CLOCK_GETTIME)
  CHECK_LIBRARY_EXISTS("rt" "clock_gettime" "" RT_HAS_CLOCK_GETTIME)
  IF(RT_HAS_CLOCK_GETTIME)
    SET(EXTRA_LIBS ${EXTRA_LIBS} -lrt)
    SET(HAVE_CLOCK_GETTIME 1)
  ENDIF(RT_HAS_CLOCK_GETTIME)
ENDIF(NOT HAVE_CLOCK_GETTIME)
IF(HAVE_CLOCK_GETTIME)
  SET(MAY_HAVE_MONO 1)
  SET(MAY_HAVE_CPU 1)
  SET(HAVE_CLOCK 1)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DHAVE_CLOCK_GETTIME")
ENDIF(HAVE_CLOCK_GETTIME)

# check for mach_absolute_time()

CHECK_FUNCTION_EXISTS("mach_absolute_time" HAVE_MACH_ABSOLUTE_TIME)
IF(HAVE_MACH_ABSOLUTE_TIME)
  SET(MAY_HAVE_MONO 1)
  SET(HAVE_CLOCK 1)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DHAVE_MACH_ABSOLUTE_TIME")
ENDIF(HAVE_MACH_ABSOLUTE_TIME)


# check for getitimer()

CHECK_FUNCTION_EXISTS("getitimer" HAVE_ITIMER)
IF(HAVE_ITIMER)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DHAVE_ITIMER")
  SET(MAY_HAVE_CPU 1)
  SET(HAVE_CLOCK 1)
ENDIF(HAVE_ITIMER)

# check for gettimeofday()

CHECK_FUNCTION_EXISTS("gettimeofday" HAVE_GETTIMEOFDAY)
IF(HAVE_GETTIMEOFDAY)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DHAVE_GETTIMEOFDAY")
  SET(HAVE_CLOCK 1)
ENDIF(HAVE_GETTIMEOFDAY)


IF (NOT HAVE_CLOCK)
  MESSAGE(FATAL_ERROR "Velly velly solly, but you have no clocks!")
ENDIF (NOT HAVE_CLOCK)
IF (NOT MAY_HAVE_CPU)
  MESSAGE(FATAL_ERROR "Velly velly solly, but I can't measure CPU-time")
ENDIF (NOT MAY_HAVE_CPU)
IF (NOT MAY_HAVE_MONO)
  MESSAGE("Monotonic time source unavailable - using realtime clocks!")
ENDIF (NOT MAY_HAVE_MONO)

# check for epoll_*

CHECK_FUNCTION_EXISTS("epoll_ctl" HAVE_EPOLL)
IF(HAVE_EPOLL)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DHAVE_EPOLL")
ENDIF(HAVE_EPOLL)


INCLUDE_DIRECTORIES(include)
ADD_LIBRARY(crpcut STATIC ${LIB_SRCS})
SET(TEST_SRCS test-src/unitt.cpp)
ADD_EXECUTABLE(testprog ${TEST_SRCS})
TARGET_LINK_LIBRARIES(testprog crpcut ${EXTRA_LIBS})
SET(LIBRARY_OUTPUT_PATH lib)
SET(EXECUTABLE_OUTPUT_PATH test)
