Requirements
============

A modern C++ compiler (ICC 11.1, g++ 4.1 or later works) that supports:

* C99 variadic macros
* C99 _Exit() function
* typeof or prefereably c++0x decltype
* tr1 includes (available from http://www.boost.org if your compiler doesn't
  ship with it)

xsltproc (http://xmlsoft.org/XSLT/xsltproc2.html) if you want to build
documentation. html-documentation for the latest releas can always be found
on http://crpcut.sourceforge.net


Ruby (http://www.ruby-lang.org/en/) if you want to run a selftest



Build
=====

1. 'cd' to the directory containing the unpacked crpcut files and type
   'cmake .', or if you want to control the installation directory,
   type 'cmake . -DCMAKE_INSTALL_PREFIX=<desired install directory>'.
   See also README_GOOGLE_MOCK for additional parameters.

   If you want tu use Intel ICC instead of your default compiler,
   type 'CXX=icpc cmake ...'

2. Type 'make'

3. If you have Ruby, and you want to check that crpcut works, type
   'make selftest'. After building the test program, the self test run
   takes about 30 seconds to complete.


Out-of-tree Build
=================

1. 'cd' to the directory where wou want to build crpcut. You may want
   this to be an empty directory.

2. type 'cmake <crpcut source directory>", optionally together with the
   -DCMAKE_INSTALL_PREFIX=<path> described above. See also
   README_GOOGLE_MOCK for additional parameters.

   If you want tu use Intel ICC instead of your default compiler,
   type 'CXX=icpc cmake ...'

3. type 'make'

4. If you have Ruby, and you want to check that crpcut works, type
   'make selftest'. After building the test program, the self test run
   takes about 30 seconds to complete.

Install
=======

1. Type 'make install'.

2. The file 'install_manifest.txt' lists the full path to all installed files.
